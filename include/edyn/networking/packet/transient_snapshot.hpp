#ifndef EDYN_NETWORKING_PACKET_TRANSIENT_SNAPSHOT_HPP
#define EDYN_NETWORKING_PACKET_TRANSIENT_SNAPSHOT_HPP

#include <vector>
#include "edyn/networking/util/registry_snapshot.hpp"

namespace edyn::packet {

/**
 * @brief A snapshot of entities and transient components. This packet is
 * generated by the client and server frequently. Packet loss is acceptable
 */
struct transient_snapshot : public registry_snapshot {
    double timestamp;
};

template<typename Archive>
void serialize(Archive &archive, transient_snapshot &snapshot) {
    archive(snapshot.timestamp);
    archive(snapshot.entities);
    archive(snapshot.pools);
}

}

#endif // EDYN_NETWORKING_PACKET_TRANSIENT_SNAPSHOT_HPP
